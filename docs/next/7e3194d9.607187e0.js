(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{168:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return l})),a.d(t,"ExampleChart",(function(){return d})),a.d(t,"default",(function(){return b}));var r=a(1),n=a(9),o=a(0),i=a(200),c={title:"Mixed Chart Types"},s={id:"charts/mixed",title:"Mixed Chart Types",description:"With Chart.js, it is possible to create mixed charts that are a combination of two or more different chart types. A common example is a bar chart that also includes a line dataset.",source:"@site/docs/charts/mixed.mdx",permalink:"/docs/VERSION/charts/mixed",editUrl:"https://github.com/chartjs/Chart.js/edit/master/docs/docs/charts/mixed.mdx",sidebar:"someSidebar",previous:{title:"Area Chart",permalink:"/docs/VERSION/charts/area"},next:{title:"Axes",permalink:"/docs/VERSION/axes/README"}},l=[{value:"Drawing order",id:"drawing-order",children:[]}],d=function(){return Object(o.useEffect)((function(){new Chart(document.getElementById("chartjs-0").getContext("2d"),{data:{labels:["January","February","March","April"],datasets:[{type:"bar",label:"Bar Dataset",data:[10,20,30,40],borderColor:"rgb(255, 99, 132)",backgroundColor:"rgba(255, 99, 132, 0.2)"},{type:"line",label:"Line Dataset",data:[50,50,50,50],fill:!1,borderColor:"rgb(54, 162, 235)"}]},options:{scales:{y:{beginAtZero:!0}}}})})),Object(i.b)("div",{className:"chartjs-wrapper"},Object(i.b)("canvas",{id:"chartjs-0",className:"chartjs"}))},p={rightToc:l,ExampleChart:d};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"With Chart.js, it is possible to create mixed charts that are a combination of two or more different chart types. A common example is a bar chart that also includes a line dataset."),Object(i.b)("p",null,"When creating a mixed chart, we specify the chart type on each dataset."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"var mixedChart = new Chart(ctx, {\n    data: {\n        datasets: [{\n            type: 'bar',\n            label: 'Bar Dataset',\n            data: [10, 20, 30, 40]\n        }, {\n            type: 'line'\n            label: 'Line Dataset',\n            data: [50, 50, 50, 50],\n        }],\n        labels: ['January', 'February', 'March', 'April']\n    },\n    options: options\n});\n")),Object(i.b)("p",null,"At this point we have a chart rendering how we'd like. It's important to note that the default options for the charts are only considered at the dataset level and are not merged at the chart level in this case."),Object(i.b)(d,{mdxType:"ExampleChart"}),Object(i.b)("h2",{id:"drawing-order"},"Drawing order"),Object(i.b)("p",null," By default, datasets are drawn so that first one is top-most. This can be altered by specifying ",Object(i.b)("inlineCode",{parentName:"p"},"order")," option to datasets. ",Object(i.b)("inlineCode",{parentName:"p"},"order")," defaults to ",Object(i.b)("inlineCode",{parentName:"p"},"0"),". Note that this also affects stacking, legend and tooltip. So its essentially the same as reordering the datasets."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"var mixedChart = new Chart(ctx, {\n   type: 'bar',\n   data: {\n       datasets: [{\n           label: 'Bar Dataset',\n           data: [10, 20, 30, 40],\n           // this dataset is drawn below\n           order: 2\n       }, {\n           label: 'Line Dataset',\n           data: [10, 10, 10, 10],\n           type: 'line',\n           // this dataset is drawn on top\n           order: 1\n       }],\n       labels: ['January', 'February', 'March', 'April']\n   },\n   options: options\n});\n")))}b.isMDXComponent=!0},200:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),d=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},p=function(e){var t=d(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(a),u=r,h=p["".concat(i,".").concat(u)]||p[u]||b[u]||o;return a?n.a.createElement(h,c({ref:t},l,{components:a})):n.a.createElement(h,c({ref:t},l))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);