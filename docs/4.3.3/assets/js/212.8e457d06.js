(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{546:function(t,e,a){"use strict";a.r(e);var o=a(3),s=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"chart-js-samples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chart-js-samples"}},[t._v("#")]),t._v(" Chart.js Samples")]),t._v(" "),e("p",[t._v("You can navigate through the samples via the sidebar.")]),t._v(" "),e("p",[t._v("Alternatively, you can run them locally. To do so, clone the "),e("a",{attrs:{href:"https://github.com/chartjs/Chart.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chart.js repository"),e("OutboundLink")],1),t._v(" from GitHub, run "),e("code",[t._v("pnpm ci")]),t._v(" to install all packages, then run "),e("code",[t._v("pnpm run docs:dev")]),t._v(" to build the documentation. As soon as the build is done, you can go to "),e("a",{attrs:{href:"http://localhost:8080/samples/",target:"_blank",rel:"noopener noreferrer"}},[t._v("localhost:8080/samples"),e("OutboundLink")],1),t._v(" to see the samples.")]),t._v(" "),e("h2",{attrs:{id:"out-of-the-box-working-samples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#out-of-the-box-working-samples"}},[t._v("#")]),t._v(" Out of the box working samples")]),t._v(" "),e("p",[t._v("These samples are made for demonstration purposes only. They won't work out of the box if you copy paste them into your own website. This is because of how the docs are getting built. Some boilerplate code gets hidden.\nFor a sample that can be copied and pasted and used directly you can check the "),e("RouterLink",{attrs:{to:"/getting-started/usage.html"}},[t._v("usage page")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"autogenerated-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autogenerated-data"}},[t._v("#")]),t._v(" Autogenerated data")]),t._v(" "),e("p",[t._v("The data used in the samples is autogenerated using custom functions. These functions do not ship with the library, for more information about this you can check the "),e("RouterLink",{attrs:{to:"/samples/utils.html"}},[t._v("utils page")]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"actions-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actions-block"}},[t._v("#")]),t._v(" Actions block")]),t._v(" "),e("p",[t._v("The samples have an "),e("code",[t._v("actions")]),t._v(" code block. These actions are not part of Chart.js. They are internally transformed to separate buttons together with "),e("code",[t._v("onClick")]),t._v(" listeners by a plugin we use in the documentation. To implement such actions yourself you can make some buttons and add "),e("code",[t._v("onClick")]),t._v(" event listeners to them. Then in these event listeners you can call your variable in which you made the chart and do the logic that the button is supposed to do.")])])}),[],!1,null,null,null);e.default=s.exports}}]);